package security.br.ufal.ic.moodle;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

@Table(name = "LogsMoodle")
@Entity
public class LogsMoodle {
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private int id;
	
	@Column(name = "log")
	private String log;
	
	@Column(name = "diff")
	private List<DiffMoodle> diffs; 
	
	private List<String> logs;
	
	public LogsMoodle(){
		this.logs= new ArrayList<String>();
		this.diffs = new ArrayList<DiffMoodle>();
	}
	
	public List<String> getLogs() throws IOException {
		Pattern pattern = Pattern.compile("(commit .*\nAuthor)");
		String log = ColetarFluxo.execCommand("git log");
		Matcher matcher = pattern.matcher(log);
		while (matcher.find()) {
			String result = matcher.group().substring(7,48);
			logs.add(result);
		}
		return logs;
	}

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public String getLog() {
		return log;
	}

	public void setLog(String log) {
		this.log = log;
	}

	public List<DiffMoodle> getDiffs() {
		return diffs;
	}

	public void setDiffs(List<DiffMoodle> diffs) {
		this.diffs = diffs;
	}

	public void setLogs(List<String> logs) {
		this.logs = logs;
	}

	
}