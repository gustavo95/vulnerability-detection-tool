package security.br.ufal.ic.moodle;


import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

import org.jsoup.Connection;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

@Table(name = "AttachmentsMoodle")
@Entity
public class AttachmentsMoodle {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private int id;
	
	@Column(name = "attach")
	private String attach;
	
	@Column(name = "fileName")
	private String fileName;
	
	@Column(name = "commit")
	private String commit;
	
	@Column(name = "function")
	private String function;
	
	List<String> attachmentsLinks;
	
	
	public AttachmentsMoodle(){
		this.attachmentsLinks =   new ArrayList<String>();
	}
	
	
	public List<String> getAttachments() throws IOException{
		List<String> bugsLinks = new BugsMoodle("").getBugsLinks();
		for(String bl: bugsLinks){
			Connection connection = Jsoup.connect(bl);
			Document doc = connection.get();
			Pattern pattern = Pattern.compile("(https://bugzilla.*org/attachment.*)");
			Elements links = doc.select("a[href]");
			for(Element al: links){
				String link = al.attr("abs:href");
				Matcher matcher = pattern.matcher(link);
				if(matcher.find()) {
					String result = matcher.group();
					attachmentsLinks.add(result);
					System.out.println(result);
				}
			}
		}

		return attachmentsLinks;
	}


	public int getId() {
		return id;
	}


	public void setId(int id) {
		this.id = id;
	}


	public String getAttach() {
		return attach;
	}


	public void setAttach(String attach) {
		this.attach = attach;
	}


	public String getFileName() {
		return fileName;
	}


	public void setFileName(String fileName) {
		this.fileName = fileName;
	}


	public String getCommit() {
		return commit;
	}


	public void setCommit(String commit) {
		this.commit = commit;
	}


	public String getFunction() {
		return function;
	}


	public void setFunction(String function) {
		this.function = function;
	}


	public List<String> getAttachmentsLinks() {
		return attachmentsLinks;
	}


	public void setAttachmentsLinks(List<String> attachmentsLinks) {
		this.attachmentsLinks = attachmentsLinks;
	}
	
	

}