package security.br.ufal.ic.webcolector;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;
import java.util.regex.Pattern;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

import security.br.ufal.ic.CVEInformation.GnomeCVEData;
import security.br.ufal.ic.gnome.ProjectDataControllerGnome;

public class SearchdataCVE {

	// M�todo que coleta todos os c�digos de vulnerabilidade
	public static ArrayList<Set> getcodeVulnerabilitiesReport() throws IOException {
		ArrayList<String> temp = new ArrayList<>();
		ArrayList<Set> listaLinkPage = new ArrayList<Set>();
		for (int i = 3; i <= 5; i++) {

			Document doc = Jsoup
					.connect("http://www.cvedetails.com/vulnerability-list/vendor_id-283/year-201" + i
							+ "/Gnome.html")
					.timeout(1500).get();

			Elements elements = doc.getElementsByAttributeValueMatching("href",
					Pattern.compile("/vulnerability-list.php"));
			Set set = new HashSet<String>();
			for (Element e : elements) {
				// System.out.println(e.attr("href"));
				if (!e.attr("href").contains("http://www.")) {
					set.add(e.attr("href"));
				}
			}

			listaLinkPage.add(set);
		}

		return listaLinkPage;
	}

	public static void main(String[] args) throws IOException {
		GnomeCVEData data = null;
		ProjectDataControllerGnome dao = new ProjectDataControllerGnome();
		for (Set<String> s : getcodeVulnerabilitiesReport()) {
			for (String s2 : s) {

				String html = "http://www.cvedetails.com" + s2;
				try {
					Document doc = Jsoup.connect(html).get();

					Elements tableElements = doc.select("table");

					Elements tableHeaderEles = tableElements.select("thead tr th");

					Elements tableRowElements = tableElements.select(":not(thead) tr");

					for (int i = 0; i < tableRowElements.size(); i++) {
						Element row = tableRowElements.get(i);
						Elements rowItems = row.select("td");
						if (rowItems.size() == 15) {
							data = new GnomeCVEData();
							data.setCVE(rowItems.get(1).text());
							data.setCWE(rowItems.get(2).text());
							data.setVulnerabilityType(rowItems.get(4).text());
							data.setPublishDate(rowItems.get(5).text());
							data.setUpdateDate(rowItems.get(6).text());
							data.setScore(rowItems.get(7).text());
							data.setGainedAccessLevel(rowItems.get(8).text());
							data.setAccess(rowItems.get(9).text());
							data.setComplexity(rowItems.get(10).text());
							data.setAuthentication(rowItems.get(11).text());
							data.setConfiguration(rowItems.get(12).text());
							data.setIntegrity(rowItems.get(13).text());
							data.setAvail(rowItems.get(14).text());

							dao.addInstace(data);
						}

					}
				} catch (IOException e) {
					e.printStackTrace();
				}

			}
		}
	}
}
