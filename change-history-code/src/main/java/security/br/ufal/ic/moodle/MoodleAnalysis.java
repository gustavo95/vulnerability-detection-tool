package security.br.ufal.ic.moodle;

import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

//moodle
public class MoodleAnalysis {

	public static void main(String[] args) throws Exception {
		fluxo();
	}
	
	public static void fluxo() throws Exception{
		ColetarFluxo cf = new ColetarFluxo();
		DataMoodleReport dataMoodle = new DataMoodleReport();
//		DataMoodleReportDAOController  dataBaseMoodle = new DataMoodleReportDAOController();
		
		LogsMoodle ld = new LogsMoodle();
		ArrayList<String> patch;
		ArrayList<String> functions;
		int count = 0;
		String textData = "";
		String file = "";
		String commit = "";
		System.out.println("Pianco");
		Pattern pattern2 = Pattern.compile("(php b/.*php)");
		for(VulnerabilitiesMoodle vLink : cf.getVulnerabilidadesLinks()){
			System.out.println("\nVulnerabilidade: " + vLink);
			for(BugsMoodle bLink : cf.getBugsLinks(vLink.getVulnerability())){
				System.out.println("Bug: " + bLink.getBug());
				patch = cf.getPatchLink(bLink.getBug());
				for(String pLink : patch){
					System.out.println("Patch: " + pLink);
					textData = cf.getFile(pLink).getFile();
					Matcher matcher2 = pattern2.matcher(textData);
					commit = pLink.split("h=")[1];
					System.out.println("Commit: " + commit);
					while (matcher2.find()) {
						file = matcher2.group().split(" ")[1];
						count = file.length() - file.replace("/", "").length();
						file = file.split("/")[count];
						System.out.println("File: " + file);
					}
					
					for(FunctionMoodle function : cf.getFunction(pLink)){
						System.out.println("Estrutura: " + function.getFunction());
					}
				}
			}
		}
	}
	
}