package security.br.ufal.ic.kernel;

import java.util.ArrayList;
import java.util.Set;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import security.br.ufal.ic.util.Utils;
import security.br.ufal.ic.xen.ColectCommitsXen;

public class KernelLinesChangeApplication {

	public static void main(String[] args) {

		ProjectDataControllerKernel dao = new ProjectDataControllerKernel();
		final Pattern pattern = Pattern.compile("(commit)\\s*(.*)");

		for (KernelDataNewApproach kernelnewappObj : dao
				.getListKenelDatanewApproach()) {

			ArrayList<String> listCommits = new ArrayList<String>();
			String a = ColectCommitsXen
					.executarComando("git log --stat --all -- "
							+ kernelnewappObj.getV_FILE());

			Matcher matcher = pattern.matcher(a);
			while (matcher.find()) {
				if (matcher.group(2).length() == 40) {
					listCommits.add(matcher.group(2));
				}
			}
			for (int i = listCommits.size() - 2; i >= 0; i--) {
				KernelSetLineChanges kernelChangesIntance = null;

				if (listCommits.get(i)
						.equals(kernelnewappObj.getCommit_fixed())) {
					break;
				}
				System.out.println(listCommits.get(i));
				ArrayList<Set<String>> listChangesSet = Utils.getSetLineNumer(
						listCommits.get(i), kernelnewappObj.getV_FILE());

				String setChagesAdd = String.join(",", listChangesSet.get(0));
				String setChagesRemoved = String.join(",",
						listChangesSet.get(1));
				kernelChangesIntance = new KernelSetLineChanges();
				kernelChangesIntance.setCommit(listCommits.get(i));
				kernelChangesIntance.setFile(kernelnewappObj.getV_FILE());
				kernelChangesIntance.setV_id(kernelnewappObj.getV_id());
				kernelChangesIntance.setLines_Changed_add(setChagesAdd);
				kernelChangesIntance.setLines_Changed_removed(setChagesRemoved);
				dao.addInstaceKernelSetLinesChange(kernelChangesIntance);

			}
		}

	}

}
