package security.br.ufal.ic.gnome;

import java.util.ArrayList;
import java.util.List;

import org.hibernate.HibernateError;
import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;

import security.br.ufal.ic.CVEInformation.CVEData;
import security.br.ufal.ic.CVEInformation.GnomeCVEData;
import security.br.ufal.ic.CVEInformation.KernelCVEData;

public class ProjectDataControllerGnome {

	final ThreadLocal<Session> threadLocal = new ThreadLocal<Session>();
	@SuppressWarnings("deprecation")
	final SessionFactory sessionFactory = new Configuration().configure().buildSessionFactory();
	Session session = threadLocal.get();

	public void addInstace(CVEData data) {

		session = sessionFactory.openSession();

		try {
			session.beginTransaction();
			session.save(data);
			session.getTransaction().commit();
			session.close();
		} catch (HibernateException e) {
			e.printStackTrace();
			session.getTransaction().rollback();

		}

	}
	
	public void addInstace(GnomeData data) {

		session = sessionFactory.openSession();

		try {
			session.beginTransaction();
			session.save(data);
			session.getTransaction().commit();
			session.close();
		} catch (HibernateException e) {
			e.printStackTrace();
			session.getTransaction().rollback();

		}

	}
	public void addInstace(GnomeClassify data) {

		session = sessionFactory.openSession();

		try {
			session.beginTransaction();
			session.save(data);
			session.getTransaction().commit();
			session.close();
		} catch (HibernateException e) {
			e.printStackTrace();
			session.getTransaction().rollback();

		}

	}
	public List<GnomeData> getListGnome() {
		session = sessionFactory.openSession();
		List<GnomeData> list = null;

		try {
			session.beginTransaction();
			list = session.createCriteria(GnomeData.class).list();

			session.close();
		} catch (HibernateException e) {
			e.printStackTrace();
			session.getTransaction().rollback();

		}

		return list;

	}
	public List<GnomeCVEData> getListGnomeCVE() {
		session = sessionFactory.openSession();
		List<GnomeCVEData> list = null;

		try {
			session.beginTransaction();
			list = session.createCriteria(GnomeCVEData.class).list();

			session.close();
		} catch (HibernateException e) {
			e.printStackTrace();
			session.getTransaction().rollback();

		}

		return list;

	}

	

}
