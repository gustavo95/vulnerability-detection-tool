package security.br.ufal.ic.webcolector;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

import security.br.ufal.ic.xen.ProjectXenDAOCOntroller;
import security.br.ufal.ic.xen.ProjectXenData;
import security.br.ufal.ic.xen.ProjectXenDataFunctionIndex;

public class IndexCollector {

	public static ArrayList<Set> getcodeVulnerabilitiesReport() {
		Pattern pattern2 = Pattern.compile("(xsa.*?\\.patch)");

		Set<String> patchs = null;
		ArrayList<Set> temp = new ArrayList<Set>();
		try {
			for (int i = 26; i <= 141; i++) {
				if (i == 115) {
					i++;
				}
				Document doc = Jsoup.connect("http://xenbits.xen.org/xsa/advisory-" + i + ".html").timeout(100000).ignoreHttpErrors(true).get();
				Elements newsHeadlines = doc.getElementsByAttributeValueEnding("href", ".patch");

				Matcher matcher2 = pattern2.matcher(newsHeadlines.text());

				patchs = new HashSet<String>();
				while (matcher2.find()) {
					patchs.add(matcher2.group(1) + " advisory-" + i);

				}

				temp.add(patchs);
			}

		} catch (Exception e) {
			e.getMessage();
		}
		return temp;
	}

	public static void main(String[] args) throws IOException {

		ArrayList<Set> lista = getcodeVulnerabilitiesReport();
		Pattern pattern = Pattern.compile("(---.*?xen\\/.*?\\.c)");
		Pattern pattern2 = Pattern.compile("(---.*?hw\\/)");
		Pattern pattern3 = Pattern.compile("(---.*?tools\\/)");
		Pattern pattern4 = Pattern.compile("(---.*?drivers\\/)");
		Pattern pattern5 = Pattern.compile("(diff --git\\s*\\w\\/)(.*?)(?<=.*)index(.+?\\s)");
		Pattern pattern9 = Pattern.compile("(diff --git\\s*\\w\\/)(.*?)(?<=.*)index(.+?\\s)");
		ProjectXenDAOCOntroller daoXen = new ProjectXenDAOCOntroller();
		ProjectXenData xenObject = new ProjectXenData();
		ProjectXenDataFunctionIndex functionIndex = null;
		int numberModifications = 0;

		int numberIndexXen = 0;

		for (Set<String> s : lista) {
			for (String e : s) {
				Document doc = Jsoup.connect("http://xenbits.xen.org/xsa/" + e.split(" ")[0]).get();
				String docText = doc.getElementsByTag("body").html();
				

				Matcher matcher = pattern.matcher(docText);
				Matcher matcher2 = pattern2.matcher(docText);
				Matcher matcher3 = pattern3.matcher(docText);
				Matcher matcher4 = pattern4.matcher(docText);

				Matcher matcher5 = pattern5.matcher(docText);

				Matcher matcher9 = pattern9.matcher(docText);

				while (matcher.find()) {
					numberModifications += 1;
				}

				while (matcher2.find()) {
					numberModifications += 1;
				}

				while (matcher3.find()) {
					numberModifications += 1;
				}

				while (matcher4.find()) {
					numberModifications += 1;
				}

				while (matcher5.find()) {
					numberIndexXen += 1;
				}

				while (matcher9.find()) {
					functionIndex = new ProjectXenDataFunctionIndex();
					functionIndex.setFile(matcher9.group(2).replace(" ", "").split("b/")[0].replace("a/", ""));
					functionIndex.setPatch(e.split(" ")[0]);
					functionIndex.setXSA(e.split(" ")[1]);
					functionIndex.setIndexDiff(matcher9.group(3).replace(" ", ""));
					functionIndex.setFunctions("");

					daoXen.addInstaceFUnction(functionIndex);

				}

			}
		}

		xenObject.setProject("XenIndex");
		xenObject.setNumberModifications(numberModifications);
		xenObject.setNumberOfIndex(numberIndexXen);

		daoXen.addInstace(xenObject);

	}
}
