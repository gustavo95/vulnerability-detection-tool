package security.br.ufal.ic.xen;

import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class ColectCommitsXen {
	public static String executarComando(String comando) {

		Process process = null;
		try {
			process = Runtime.getRuntime().exec(comando);
		} catch (IOException e) {
			e.printStackTrace();
		}

		InputStream inputStream = process.getInputStream();

		String saida = "";

		{
			int n;

			try {
				while ((n = inputStream.read()) != -1) {
					saida += (char) n;
				}
			} catch (IOException e) {
				e.printStackTrace();
			}
		}

		return saida + "\n";
	}

	public static void main(String[] args) {

		ProjectXenDAOCOntroller dao = new ProjectXenDAOCOntroller();
		List<ProjectXenDataFunctionIndex> list = dao.getList();
		
		for (ProjectXenDataFunctionIndex xenObject : list) {
			ArrayList<String> listCommits = new ArrayList<String>();
			String a = executarComando("git log " + xenObject.getFile());

			Pattern pattern = Pattern.compile("(commit)\\s*(.*)");
			Matcher matcher = pattern.matcher(a);
			while (matcher.find()) {
				if (matcher.group(2).length() == 40) {
					listCommits.add(matcher.group(2));
				}

			}

			
			 int a1=0;
			for (int i = listCommits.size() - 1; i > 0; i--) {
				String b = "";
				b = executarComando(
						"git diff " + listCommits.get(i) + " " + listCommits.get(i - 1) + " " + xenObject.getFile());
				Pattern pattern2 = Pattern.compile("index\\s*(.*?)\\s");
				Matcher matcher2 = pattern2.matcher(b);
				while (matcher2.find()) {
					if (matcher2.group(1).equals((xenObject.getIndexDiff()))) {
						CommitFileXen commit = new CommitFileXen();
						commit.setCommit(listCommits.get(i-1));
						commit.setFile(xenObject.getFile());
						dao.addInstaceFileCommit(commit);
						System.out.println(xenObject.getFile() + "---------" + listCommits.get(i));
						System.out.println(listCommits.get(i-1));
						System.out.println(xenObject.getFile());
						break;
					}
					
				}

			}
		}
	}
}
