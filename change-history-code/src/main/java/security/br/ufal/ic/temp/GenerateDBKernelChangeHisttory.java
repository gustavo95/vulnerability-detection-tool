package security.br.ufal.ic.temp;

import security.br.ufal.ic.kernel.KernelClassify;
import security.br.ufal.ic.kernel.KernelClassifyNewApproach;
import security.br.ufal.ic.kernel.ProjectDataControllerKernel;
import security.br.ufal.ic.util.ODCStructures;

public class GenerateDBKernelChangeHisttory {

	public static void main(String[] args) {

		ProjectDataControllerKernel dao = new ProjectDataControllerKernel();

		KernelClassify kernelclassify = null;

		for (KernelClassifyNewApproach kernel : dao.getListKernelClassifyNewApproach()) {
			int NEC = 0;
			int NMC = 0;
			int NEFC = 0;
			int NMFC = 0;
			int NEM = 0;
			int NMM = 0;
			int NEV = 0;
			int NMV = 0;

			for (KernelClassifyNewApproach kernel2 : dao.getListByCommit(kernel.getCommit(), kernel.getCVEID(),
					kernel.getFunc())) {
				System.out.println(kernel.getCommit());

				if (kernel2.getFunc().equals(kernel.getFunc()) && kernel.getP_ID().equals(kernel2.getP_ID())) {
					if (kernel.getTypeofChange().equals("+")) {
						if (kernel2.getTypeOfStructure().equals(ODCStructures.ConditionalStatment)) {
							NMC += 1;
						} else if (kernel2.getTypeOfStructure().equals(ODCStructures.FunctionCall)) {
							NMFC += 1;
						} else if (kernel2.getTypeOfStructure().equals(ODCStructures.FunctionD)) {
							NMM += 1;
						} else if (kernel2.getTypeOfStructure().equals(ODCStructures.Variable)) {
							NMV += 1;
						}

					}
					else if (kernel.getTypeofChange().equals("-")) {
						if (kernel2.getTypeOfStructure().equals(ODCStructures.ConditionalStatment)) {
							NEC += 1;
						} else if (kernel2.getTypeOfStructure().equals(ODCStructures.FunctionCall)) {
							NEFC += 1;
						} else if (kernel2.getTypeOfStructure().equals(ODCStructures.FunctionD)) {
							NEM += 1;
						} else if (kernel2.getTypeOfStructure().equals(ODCStructures.Variable)) {
							NEV += 1;
						}

					}

				}

			}
			kernelclassify = new KernelClassify();
			kernelclassify.setCVEID(kernel.getCVEID());
			kernelclassify.setFile_path(kernel.getFile_path());
			kernelclassify.setFunc(kernel.getFunc());
			kernelclassify.setCommit(kernel.getCommit());
			kernelclassify.setNConditionalMissingChanges(NMC);
			kernelclassify.setNFunctionCallMissingChanges(NMFC);
			kernelclassify.setNMethodMissingChanges(NMM);
			kernelclassify.setNVariableMissingChanges(NMV);
			kernelclassify.setNConditionalExtraneousChanges(NEC);
			kernelclassify.setNFunctionCallExtraneousChanges(NEFC);
			kernelclassify.setNMethodExtraneousChanges(NEM);
			kernelclassify.setNVariableExtraneousChanges(NEV);
			dao.addInstaceKernelHistory(kernelclassify);
			dao.deleteByCommitandCveID(kernel.getCommit(), kernel.getCommit(), kernel.getFunc());

		}
	}

}
